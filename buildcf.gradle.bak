//import org.apache.ivy.plugins.resolver.URLResolver
// just trying to get correct repo address to resolve this dependency->'http://repo.springsource.org/milestone' - that worked...

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'  // Maven plugin to install artifact in local Maven repo.- but didnt work - missing bits??

// put this in to test the cloud foundry plugin for gradle
apply plugin: 'cloudfoundry'

// here is a plugin to start a local servlet container for local testing. it's called jetty
apply plugin: 'jetty'
// so $ gradle jettyRun  runs jetty on port localhost:8080/test

def compatibilityVersion = 1.5
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

ext{
   webAppDir = file('war')
   //  -- needed for jetty ?
   jettyRun.webAppSourceDirectory = file("war/WEB-INF/groovy")
} // end of proj extensions


buildscript {
       repositories {
         mavenCentral()

         // may need this cos of cloudfoundry-client-lib:0.8.4 or gradle plugin, can't remember which
	 mavenRepo url :'http://repo.springsource.org/milestone' 
       }
       dependencies {
           classpath group: 'org.gradle.api.plugins', name: 'gradle-cf-plugin', version: '0.2.0'
       }
   }


// following parms feed the gradle plugin - the same parms feed the java sample below which runs fine with the same credentials
// this plugin reports bad atrget address - so maybe issue w/ CF 0.2.0
cloudfoundry {
  username = ''
  password = ''
  application = 'caelyf'
  target = 'https://api.run.pivotal.io'   //'https://api.run.cfapps.io'
  uris = ['http://caelyf.cfapps.io/']
} // end of Cf parms

/* ------------
  application = 'caelyftemplate2'
  target='https://api.run.pivotal.io' // cloud foundry V2 target for pivotal
  framework = 'standalone'
  applicationFramework='standalone'
  runtime = 'java'
  file = new File(webAppDirName)
  uris = ['http://caelyftemplate2.cfapps.io/']
}
-----*/

// puts compiled .jar into ~/.m2 maven local
install.dependsOn ':build'

// this was an attempt to put resulting .jar file into the local maven repo
def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
repositories {
    // Use local Maven repo location. We don't need this if we only want to install
    // an artifact, but we do need it if we want to use dependencies from the local
    // repository.
    // see: http://mrhaki.blogspot.fr/2009/11/gradle-goodness-use-our-local-maven.html
    //mavenRepo url: localMavenRepo
/*
* What went wrong:
Could not resolve all dependencies for configuration ':compile'.
> Could not download artifact 'org.springframework:spring-asm:3.1.1.RELEASE@jar'
   > Artifact 'org.springframework:spring-asm:3.1.1.RELEASE@jar' not found.
*/

    mavenCentral()
    mavenRepo url :'http://repo.springsource.org/milestone'
}


dependencies {
    compile 'org.codehaus.groovy:groovy-all:1.8.6'
    compile 'org.cloudfoundry:cloudfoundry-client-lib:0.8.4'

    testCompile 'javax.servlet:servlet-api:2.5'
    testCompile 'org.cloudfoundry:cloudfoundry-client-lib:0.8.4'
}


sourceSets {
    main {
        groovy {
            srcDir 'src/groovy'
        }
        java {
            srcDir 'src/java'
        }
        output.classesDir file('war/WEB-INF/classes')
    }
}

clean {
     delete sourceSets*.output.classesDir
}

// cloud foundry java app - this runs even when the gradle plugin won't !!
task(runSimple, dependsOn: 'classes', type: JavaExec) {
    main = 'JavaSample2'
    classpath = sourceSets.main.runtimeClasspath
    args 'https://api.run.pivotal.io'
    args 'jim@googlemail.com'
    args 'pw'
    systemProperty 'simple.message', 'Hello '
}


// this wont work cos you cant run groovy scripts in gradle
task(runGroovy, dependsOn: 'classes', type: JavaExec) {
    main = 'GroovySample'
    classpath = sourceSets.main.runtimeClasspath
    args 'https://api.run.pivotal.io'
    args 'jim@googlemail.com'
    args 'pw'
    systemProperty 'simple.message', 'Hello '
}

task wrapper(type: Wrapper) {
    gradleVersion '1.7'
}
